<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>usysrc.dev</title><link>https://usysrc.github.io/usysrc.dev/</link><description>Recent content on usysrc.dev</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 26 Jan 2024 16:40:00 +0200</lastBuildDate><atom:link href="https://usysrc.github.io/usysrc.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Lua Ternary Idiom</title><link>https://usysrc.github.io/usysrc.dev/posts/ternary/</link><pubDate>Fri, 26 Jan 2024 16:40:00 +0200</pubDate><guid>https://usysrc.github.io/usysrc.dev/posts/ternary/</guid><description>Lua Ternary Idiom You can find ternary operators in other languages in the following form:
d = a ? b : c Ternary by Precedence. In Lua logical operators and their precedence can be used to achieve the same:
d = a and b or c Written out with if it would look like this:
if a then d = b else d = c end If a is true then b will be assigned to d.</description></item><item><title>TIC80</title><link>https://usysrc.github.io/usysrc.dev/posts/tic/</link><pubDate>Sun, 01 Oct 2023 12:47:32 +0200</pubDate><guid>https://usysrc.github.io/usysrc.dev/posts/tic/</guid><description>TIC80 - External Editor To get a better experience to edit the sprites and maps while also editing the code in an external editor we can use require
How to require a file Sadly lua require does not work the way as expected in TIC-80. We need to add the package path.
package.path = package.path .. &amp;#34;;/Users/youruser/Library/Application Support/com.nesbox.tic/TIC-80/?.lua&amp;#34; require &amp;#34;game&amp;#34;</description></item><item><title>interaction</title><link>https://usysrc.github.io/usysrc.dev/pages/games/</link><pubDate>Sun, 10 Jul 2022 13:41:13 +0200</pubDate><guid>https://usysrc.github.io/usysrc.dev/pages/games/</guid><description>spelltop spelltop was created in 2021 and now my main banner for games.
some projects can be found on spelltop.itch.io
game development I love small game engines and frameworks like tic80, pico8, picotron and love2d.
ludum dare I completed a couple of small games in ludum dare.
past aliases I made games under the name: headchant</description></item><item><title>sound</title><link>https://usysrc.github.io/usysrc.dev/pages/music/</link><pubDate>Sun, 10 Jul 2022 13:40:56 +0200</pubDate><guid>https://usysrc.github.io/usysrc.dev/pages/music/</guid><description>
I enjoy playing the piano and making computer and electronic music.
rdlk I made a lot of kraut and synthesizer dance music https://rdlk.xyz
orcish inn I made the soundtrack for orcish inn by steven colling.
shoegaze vst I couldn&amp;rsquo;t find a plain reverse delay vst plugin. https://spelltop.itch.io/shoegaze-vst So I made one.
Features:
reverse delay, a staple of shoegaze feedback minimal interface no DRM sadly for Windows only</description></item><item><title>Hello World</title><link>https://usysrc.github.io/usysrc.dev/posts/test/</link><pubDate>Sun, 10 Jul 2022 12:47:32 +0200</pubDate><guid>https://usysrc.github.io/usysrc.dev/posts/test/</guid><description>Hello World This is the first blog post with hugo. I moved the pages already and now will work on moving all the blog posts.
Some lua code:
local a = 3 a = a + 1 print(a) Some inline code what.</description></item><item><title>Tables in Pico8</title><link>https://usysrc.github.io/usysrc.dev/posts/tables/</link><pubDate>Sat, 16 Jul 2016 16:50:31 +0200</pubDate><guid>https://usysrc.github.io/usysrc.dev/posts/tables/</guid><description>Tables in Pico8 The Concatenation Trick For beginners, I suggest you use concatenation to index 2D arrays. Create a new object in a 2D cell at (i,j) in a table called myArray with the following code:
myArray[i..&amp;#34;,&amp;#34;..j] = {} To iterate over all objects in the myArray you can use the pairs iterator. Caution: the objects are not ordered when using pairs!
for k,v in pairs(myArray) do -- v is the cell object -- k is a string in the form of &amp;#34;i,j&amp;#34; end If we want to access the objects in a particular order we should use nested for loops:</description></item><item><title>A CPU in Lua</title><link>https://usysrc.github.io/usysrc.dev/posts/cpu/</link><pubDate>Sat, 12 Apr 2014 17:13:34 +0200</pubDate><guid>https://usysrc.github.io/usysrc.dev/posts/cpu/</guid><description>A CPU in Lua This post was originally published on blog.headchant.com but was edited and moved here in 2022.
It might be interesting to implement a small register based VM in Lua. Lets start by considering the architecture of a register machine.
The NOP machine If we look at how existing Register Machines are designed for example the or the Lua VM itself, we see a few things:
some registers a program something that executes the program The last part will be the point of entry for the lua program itself but also decide the core features of the design.</description></item><item><title>code</title><link>https://usysrc.github.io/usysrc.dev/pages/code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://usysrc.github.io/usysrc.dev/pages/code/</guid><description>philosophy I enjoy minimalist and modular software (see unix philosophy).
programming languages I currently use the following programming languages:
languages := [4]string{ &amp;#34;Go&amp;#34;, &amp;#34;Lua&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;Python&amp;#34;, } I additionally have worked with the following programming languages in some way or another:
local otherLanguages = { &amp;#34;Javascript&amp;#34;, &amp;#34;C#&amp;#34;, &amp;#34;C++&amp;#34;, &amp;#34;Python&amp;#34;, &amp;#34;Visual Basic&amp;#34;, &amp;#34;QBasic&amp;#34;, &amp;#34;Omikron Basic&amp;#34;, &amp;#34;SQL&amp;#34;, &amp;#34;Lisp&amp;#34;, &amp;#34;Max/MSP&amp;#34;, &amp;#34;Supercollider&amp;#34;, &amp;#34;Assembly Language&amp;#34;, } I joined advent of code in 2019, 2020, 2021, 2022 and 2023.</description></item></channel></rss>